<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Travis&#39; Blog</title>
    <link>https://travis103.github.io/</link>
    <description>Recent content on Travis&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Apr 2022 16:44:25 +0800</lastBuildDate><atom:link href="https://travis103.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Introduction</title>
      <link>https://travis103.github.io/notes/go/basic/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://travis103.github.io/notes/go/basic/introduction/</guid>
      <description>Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go     Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34;   Shortcut:
msg := &amp;#34;Hello&amp;#34;     Constants const Phi = 1.</description>
    </item>
    
    <item>
      <title>Basic Types</title>
      <link>https://travis103.github.io/notes/go/basic/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://travis103.github.io/notes/go/basic/types/</guid>
      <description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string`     Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [.</description>
    </item>
    
    <item>
      <title>Flow Control</title>
      <link>https://travis103.github.io/notes/go/basic/flow-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://travis103.github.io/notes/go/basic/flow-control/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)     Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default!  fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() }     Loop for count := 0; count &amp;lt;= 10; count++ { fmt.</description>
    </item>
    
    <item>
      <title>File Manipulation</title>
      <link>https://travis103.github.io/notes/go/advanced/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://travis103.github.io/notes/go/advanced/files/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)     </description>
    </item>
    
    <item>
      <title>Bash Variables</title>
      <link>https://travis103.github.io/notes/bash/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://travis103.github.io/notes/bash/basic/</guid>
      <description>Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME}    Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi     </description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <item>
      <title>Nsq</title>
      <link>https://travis103.github.io/nsq/</link>
      <pubDate>Fri, 15 Apr 2022 16:44:25 +0800</pubDate>
      
      <guid>https://travis103.github.io/nsq/</guid>
      <description>official site  https://nsq.io/  install git clone https://github.com/nsqio/nsq cd nsq make ./test.sh usage nsqlookupd nsqd --lookupd-tcp-address=127.0.0.1:4160 nsqadmin --lookupd-http-address=127.0.0.1:4161 curl -d &amp;#39;hello world 1&amp;#39; &amp;#39;http://127.0.0.1:4151/pub?topic=test&amp;#39; nsq_to_file --topic=test --output-dir=/tmp --lookupd-http-address=127.0.0.1:4161 go  https://mp.weixin.qq.com/s/czxAuY-CW9v1nBOocYZN5g
 js python </description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>https://travis103.github.io/prometheus/</link>
      <pubDate>Fri, 15 Apr 2022 15:01:48 +0800</pubDate>
      
      <guid>https://travis103.github.io/prometheus/</guid>
      <description>https://www.prometheus.wang/</description>
    </item>
    
    <item>
      <title>Google Search</title>
      <link>https://travis103.github.io/google-search/</link>
      <pubDate>Fri, 15 Apr 2022 14:46:00 +0800</pubDate>
      
      <guid>https://travis103.github.io/google-search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://travis103.github.io/github/</link>
      <pubDate>Fri, 15 Apr 2022 14:20:05 +0800</pubDate>
      
      <guid>https://travis103.github.io/github/</guid>
      <description>Github Pages  1. Create a repository Head over to GitHub and create a new public repository named username.github.io, where username is your username (or organization name) on GitHub. If the first part of the repository doesn’t exactly match your username, it won’t work, so make sure to get it right. 2. Clone the repository Go to the folder where you want to store your project, and clone the new repository: git clone https://github.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://travis103.github.io/git/git/</link>
      <pubDate>Fri, 15 Apr 2022 14:19:16 +0800</pubDate>
      
      <guid>https://travis103.github.io/git/git/</guid>
      <description>clone
 git clone &amp;ndash;recursive     submodule
 git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke git submodule update &amp;ndash;init &amp;ndash;recursive    # 逆初始化模块，其中{MOD_NAME}为模块目录，执行后可发现模块目录被清空 git submodule deinit -f themes/toha # 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存） git rm --cached themes/toha # 提交更改到代码库，可观察到&#39;.gitmodules&#39;内容发生变更 git commit -am &amp;quot;Remove a submodule.&amp;quot;   remote
 git remote add origin https://github.com/ushdjkfnf/blog.git    config
 git config -l git config &amp;ndash;global user.email git config &amp;ndash;global user.</description>
    </item>
    
    <item>
      <title>Firefox</title>
      <link>https://travis103.github.io/firefox/firefox/</link>
      <pubDate>Fri, 15 Apr 2022 14:18:19 +0800</pubDate>
      
      <guid>https://travis103.github.io/firefox/firefox/</guid>
      <description>plugins  react restclient ublock Tree Style Tab Undo Close Tab 翻译网页 Tampermonkey  </description>
    </item>
    
    <item>
      <title>Code Push Server</title>
      <link>https://travis103.github.io/code-push-server/code-push-server/</link>
      <pubDate>Thu, 14 Apr 2022 17:44:21 +0800</pubDate>
      
      <guid>https://travis103.github.io/code-push-server/code-push-server/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Netcloud</title>
      <link>https://travis103.github.io/netcloud/netcloud/</link>
      <pubDate>Thu, 14 Apr 2022 15:57:47 +0800</pubDate>
      
      <guid>https://travis103.github.io/netcloud/netcloud/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nitroshare</title>
      <link>https://travis103.github.io/nitroshare/</link>
      <pubDate>Thu, 14 Apr 2022 15:57:37 +0800</pubDate>
      
      <guid>https://travis103.github.io/nitroshare/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kitex</title>
      <link>https://travis103.github.io/kitex/</link>
      <pubDate>Thu, 14 Apr 2022 15:57:29 +0800</pubDate>
      
      <guid>https://travis103.github.io/kitex/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Listary</title>
      <link>https://travis103.github.io/listary/</link>
      <pubDate>Thu, 14 Apr 2022 15:56:02 +0800</pubDate>
      
      <guid>https://travis103.github.io/listary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kooder</title>
      <link>https://travis103.github.io/kooder/</link>
      <pubDate>Thu, 14 Apr 2022 15:51:45 +0800</pubDate>
      
      <guid>https://travis103.github.io/kooder/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Upslash</title>
      <link>https://travis103.github.io/upslash/upslash/</link>
      <pubDate>Thu, 14 Apr 2022 15:29:53 +0800</pubDate>
      
      <guid>https://travis103.github.io/upslash/upslash/</guid>
      <description>https://source.unsplash.com/random
https://source.unsplash.com/random/800x600
https://source.unsplash.com/random/800x0
https://source.unsplash.com/user/raaminka
https://source.unsplash.com/user/raaminka/like
https://source.unsplash.com/800x0/?encryption
https://source.unsplash.com/800x0/?encryption,girl
https://source.unsplash.com/800x0/daily?sports</description>
    </item>
    
    <item>
      <title>Jinja</title>
      <link>https://travis103.github.io/jinja/jinja/</link>
      <pubDate>Thu, 14 Apr 2022 15:08:48 +0800</pubDate>
      
      <guid>https://travis103.github.io/jinja/jinja/</guid>
      <description> http://diego.team/2020/11/19/Flask-jinja2-%E5%86%85%E7%BD%AE%E8%BF%87%E6%BB%A4%E5%99%A8-%E6%80%BB%E7%BB%93%E4%B8%8E%E5%88%86%E6%9E%90/  </description>
    </item>
    
    <item>
      <title>Squid</title>
      <link>https://travis103.github.io/squid/squid/</link>
      <pubDate>Thu, 14 Apr 2022 14:58:56 +0800</pubDate>
      
      <guid>https://travis103.github.io/squid/squid/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Apollo</title>
      <link>https://travis103.github.io/apollo/apollo/</link>
      <pubDate>Thu, 14 Apr 2022 14:56:37 +0800</pubDate>
      
      <guid>https://travis103.github.io/apollo/apollo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Keepalived</title>
      <link>https://travis103.github.io/keepalived/</link>
      <pubDate>Thu, 14 Apr 2022 14:55:39 +0800</pubDate>
      
      <guid>https://travis103.github.io/keepalived/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Varnish</title>
      <link>https://travis103.github.io/varnish/</link>
      <pubDate>Thu, 14 Apr 2022 14:54:57 +0800</pubDate>
      
      <guid>https://travis103.github.io/varnish/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SNS</title>
      <link>https://travis103.github.io/sns/</link>
      <pubDate>Thu, 14 Apr 2022 14:20:52 +0800</pubDate>
      
      <guid>https://travis103.github.io/sns/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Haproxy</title>
      <link>https://travis103.github.io/haproxy/</link>
      <pubDate>Wed, 13 Apr 2022 15:29:49 +0800</pubDate>
      
      <guid>https://travis103.github.io/haproxy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JavaScript</title>
      <link>https://travis103.github.io/javascript/</link>
      <pubDate>Fri, 01 Apr 2022 10:24:11 +0800</pubDate>
      
      <guid>https://travis103.github.io/javascript/</guid>
      <description>Docs https://quickref.me/javascript https://www.typescriptlang.org/play https://learnxinyminutes.com/docs/typescript/
Install https://nodejs.org/en/download/ curl -fsSL https://deno.land/install.sh | sh brew install deno cargo install deno &amp;ndash;locked
Promise https://www.runoob.com/js/js-promise.html
new Promise(function (resolve, reject) { var a = 0; var b = 1; if (b == 0) reject(&amp;#34;Divide zero&amp;#34;); else resolve(a / b); }).then(function (value) { console.log(&amp;#34;a / b = &amp;#34; + value); }).catch(function (err) { console.log(err); }).finally(function () { console.log(&amp;#34;End&amp;#34;); }); Promise 类有 .then() .catch() 和 .finally() 三个方法，这三个方法的参数都是一个函数，.then() 可以将参数中的函数添加到当前 Promise 的正常执行序列，.</description>
    </item>
    
    <item>
      <title>Curl</title>
      <link>https://travis103.github.io/curl/</link>
      <pubDate>Tue, 29 Mar 2022 16:17:23 +0800</pubDate>
      
      <guid>https://travis103.github.io/curl/</guid>
      <description>Docs Install Configure Usage curl -X POST -H &amp;#39;Content-Type: application/json&amp;#39; -i &amp;#39;&amp;#39; --data &amp;#39;{ &amp;#34;pageNum&amp;#34;: 0 }&amp;#39; </description>
    </item>
    
    <item>
      <title>Gitter</title>
      <link>https://travis103.github.io/gitter/</link>
      <pubDate>Mon, 28 Mar 2022 21:48:21 +0800</pubDate>
      
      <guid>https://travis103.github.io/gitter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slack</title>
      <link>https://travis103.github.io/slack/</link>
      <pubDate>Mon, 28 Mar 2022 21:48:06 +0800</pubDate>
      
      <guid>https://travis103.github.io/slack/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dapp</title>
      <link>https://travis103.github.io/dapp/</link>
      <pubDate>Fri, 25 Mar 2022 16:16:19 +0800</pubDate>
      
      <guid>https://travis103.github.io/dapp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dao</title>
      <link>https://travis103.github.io/dao/</link>
      <pubDate>Fri, 25 Mar 2022 16:16:02 +0800</pubDate>
      
      <guid>https://travis103.github.io/dao/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Emqx</title>
      <link>https://travis103.github.io/emqx/</link>
      <pubDate>Fri, 25 Mar 2022 16:13:15 +0800</pubDate>
      
      <guid>https://travis103.github.io/emqx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ActiveMQ</title>
      <link>https://travis103.github.io/activemq/</link>
      <pubDate>Fri, 25 Mar 2022 16:12:58 +0800</pubDate>
      
      <guid>https://travis103.github.io/activemq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SQS</title>
      <link>https://travis103.github.io/sqs/</link>
      <pubDate>Fri, 25 Mar 2022 16:12:34 +0800</pubDate>
      
      <guid>https://travis103.github.io/sqs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ZeroMQ</title>
      <link>https://travis103.github.io/zeromq/</link>
      <pubDate>Fri, 25 Mar 2022 16:12:09 +0800</pubDate>
      
      <guid>https://travis103.github.io/zeromq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>RabbitMQ</title>
      <link>https://travis103.github.io/rabbitmq/</link>
      <pubDate>Fri, 25 Mar 2022 16:11:46 +0800</pubDate>
      
      <guid>https://travis103.github.io/rabbitmq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lighthouse</title>
      <link>https://travis103.github.io/lighthouse/</link>
      <pubDate>Fri, 25 Mar 2022 15:59:41 +0800</pubDate>
      
      <guid>https://travis103.github.io/lighthouse/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Similarweb</title>
      <link>https://travis103.github.io/similarweb/</link>
      <pubDate>Fri, 25 Mar 2022 15:59:27 +0800</pubDate>
      
      <guid>https://travis103.github.io/similarweb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Backlinko</title>
      <link>https://travis103.github.io/backlinko/</link>
      <pubDate>Fri, 25 Mar 2022 15:59:22 +0800</pubDate>
      
      <guid>https://travis103.github.io/backlinko/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ahrefs</title>
      <link>https://travis103.github.io/ahrefs/</link>
      <pubDate>Fri, 25 Mar 2022 15:59:17 +0800</pubDate>
      
      <guid>https://travis103.github.io/ahrefs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Semrush</title>
      <link>https://travis103.github.io/semrush/</link>
      <pubDate>Fri, 25 Mar 2022 15:59:09 +0800</pubDate>
      
      <guid>https://travis103.github.io/semrush/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Alexa</title>
      <link>https://travis103.github.io/alexa/</link>
      <pubDate>Fri, 25 Mar 2022 15:58:56 +0800</pubDate>
      
      <guid>https://travis103.github.io/alexa/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SEO</title>
      <link>https://travis103.github.io/seo/</link>
      <pubDate>Fri, 25 Mar 2022 15:55:49 +0800</pubDate>
      
      <guid>https://travis103.github.io/seo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SNMP</title>
      <link>https://travis103.github.io/snmp/</link>
      <pubDate>Fri, 25 Mar 2022 15:53:54 +0800</pubDate>
      
      <guid>https://travis103.github.io/snmp/</guid>
      <description>Docs  http://www.ttlsa.com/monitor/snmp-oid/ https://oidref.com/ https://oidref.com/1.3.6.1.4.1.9 (Ciscco)  Commands snmpwalk -v 2c -Cc -c public 172.16.1.14 .1 snmpwalk -v 2c -Cc -c public 172.16.1.14 .1.3.6.1.2.1.1.5.0 </description>
    </item>
    
    <item>
      <title>Web3</title>
      <link>https://travis103.github.io/web3/</link>
      <pubDate>Fri, 25 Mar 2022 15:51:59 +0800</pubDate>
      
      <guid>https://travis103.github.io/web3/</guid>
      <description>web3-study-rss new projects to research  https://linear.finance/ https://www.coinomy.com/  focus on for now  https://github.com/Bitcoin-ABC https://mask.io/ https://github.com/dogecoin https://github.com/DODOEX  coin project examples  https://github.com/bitcoin https://github.com/ethereum https://github.com/compound-finance https://github.com/stellar https://github.com/omgnetwork https://github.com/dashpay https://github.com/litecoin-project https://github.com/smartcontractkit https://github.com/filecoin-project https://github.com/paritytech https://github.com/Uniswap https://github.com/monero-project https://github.com/aave https://github.com/1inch-exchange https://github.com/bandprotocol https://github.com/graphprotocol https://github.com/balancer-labs https://github.com/HorizenOfficial https://github.com/gianni-dalerta https://github.com/cardano-foundation https://github.com/Loopring https://github.com/Synthetixio https://github.com/makerdao https://github.com/zcash https://github.com/bnb https://github.com/HuobiGroup https://github.com/EOSIO https://github.com/renproject https://github.com/yearn  im examples  https://github.com/matrix-org/synapse https://github.com/RocketChat/Rocket.Chat  storage examples  https://github.com/ipfs/go-ipfs https://github.com/crustio  runtime examples  https://github.com/robertmuth/Pytorinox https://github.com/docker-slim/docker-slim  3rd wallet  https://www.</description>
    </item>
    
    <item>
      <title>NFT</title>
      <link>https://travis103.github.io/nft/</link>
      <pubDate>Fri, 25 Mar 2022 15:51:33 +0800</pubDate>
      
      <guid>https://travis103.github.io/nft/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Blockchain</title>
      <link>https://travis103.github.io/blockchain/</link>
      <pubDate>Fri, 25 Mar 2022 15:50:07 +0800</pubDate>
      
      <guid>https://travis103.github.io/blockchain/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Yaml</title>
      <link>https://travis103.github.io/yaml/</link>
      <pubDate>Fri, 25 Mar 2022 15:44:29 +0800</pubDate>
      
      <guid>https://travis103.github.io/yaml/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vue</title>
      <link>https://travis103.github.io/vue/</link>
      <pubDate>Fri, 25 Mar 2022 15:10:08 +0800</pubDate>
      
      <guid>https://travis103.github.io/vue/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Redisearch</title>
      <link>https://travis103.github.io/redisearch/</link>
      <pubDate>Fri, 25 Mar 2022 15:06:13 +0800</pubDate>
      
      <guid>https://travis103.github.io/redisearch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Elasticsearcch</title>
      <link>https://travis103.github.io/elasticsearcch/</link>
      <pubDate>Fri, 25 Mar 2022 15:06:04 +0800</pubDate>
      
      <guid>https://travis103.github.io/elasticsearcch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>React</title>
      <link>https://travis103.github.io/react/</link>
      <pubDate>Fri, 25 Mar 2022 15:01:43 +0800</pubDate>
      
      <guid>https://travis103.github.io/react/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Minikube</title>
      <link>https://travis103.github.io/minikube/</link>
      <pubDate>Fri, 25 Mar 2022 14:59:01 +0800</pubDate>
      
      <guid>https://travis103.github.io/minikube/</guid>
      <description>minikube
pre brew install docker brew install docker-compose
brew install kubectl brew install hyperkit
install brew install minikube
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 sudo install minikube-darwin-amd64 /usr/local/bin/minikube
minikube config set cpus 1 minikube config set memory 4g
minikube config set memory 8192
minikube config set driver hyperkit
usage minikube start &amp;ndash;vm-driver=&amp;ldquo;kvm2&amp;rdquo; &amp;ndash;container-runtime=containerd &amp;ndash;docker-opt containerd=/var/run/containerd/containerd.sock &amp;ndash;docker-env=&amp;ldquo;http_proxy=x.x.x.x:8080&amp;rdquo; &amp;ndash;docker-env=&amp;ldquo;https_proxy=x.x.x.x:8080&amp;rdquo; start
minikube start &amp;ndash;kubernetes-version=1.18.8 &amp;ndash;driver=hyperkit &amp;ndash;container-runtime=containerd &amp;ndash;image-mirror-country=&amp;lsquo;cn&amp;rsquo;
minikube start &amp;ndash;kubernetes-version=1.18.8 &amp;ndash;driver=hyperkit &amp;ndash;container-runtime=containerd &amp;ndash;registry-mirror=https://registry.docker-cn.com
minikube start &amp;ndash;driver=hyperkit &amp;ndash;container-runtime=containerd &amp;ndash;image-repository=&amp;lsquo;registry.</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://travis103.github.io/markdown/</link>
      <pubDate>Fri, 25 Mar 2022 14:56:40 +0800</pubDate>
      
      <guid>https://travis103.github.io/markdown/</guid>
      <description>markdown.md
 https://markdown.com.cn/
 或者 ./可以省略
或者 ./可以省略
Sample Markdown Cheat Sheet This is a sample markdown file to help you write Markdown quickly :)
If you use the fabulous Sublime Text 2/3 editor along with the Markdown Preview plugin, open your ST2 Palette with CMD+⇧+P then choose Markdown Preview in browser to see the result in your browser.
Text basics this is italic and this is bold . another italic and another bold</description>
    </item>
    
    <item>
      <title>Beanstalk</title>
      <link>https://travis103.github.io/beanstalk/</link>
      <pubDate>Fri, 25 Mar 2022 14:52:28 +0800</pubDate>
      
      <guid>https://travis103.github.io/beanstalk/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://travis103.github.io/kafka/</link>
      <pubDate>Fri, 25 Mar 2022 14:52:21 +0800</pubDate>
      
      <guid>https://travis103.github.io/kafka/</guid>
      <description>version: &#39;3&#39; services: zookeeper: container_name: &#39;zookeeper&#39; image: &#39;harbor.local.hqq.com/hqq/zookeeper:latest&#39; ports: - &#39;2181:2181&#39; environment: - ALLOW_ANONYMOUS_LOGIN=yes kafka: container_name: &#39;kafka&#39; image: &#39;harbor.local.hqq.com/hqq/kafka:latest&#39; ports: - &#39;9092:9092&#39; environment: - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 - ALLOW_PLAINTEXT_LISTENER=yes depends_on: - zookeeper </description>
    </item>
    
    <item>
      <title>MQ</title>
      <link>https://travis103.github.io/mq/</link>
      <pubDate>Fri, 25 Mar 2022 14:49:40 +0800</pubDate>
      
      <guid>https://travis103.github.io/mq/</guid>
      <description>https://www.cnblogs.com/xiexj/p/7644999.html
Beanstalk 是一个高性能、轻量级的、分布式的、内存型的消息队列系统。最初设计的目的是想通过后台异步执行耗时的任务来降低高容量Web应用系统的页面访问延迟。其实Beanstalkd是典型的类Memcached设计，协议和使用方式都是同样的风格。其基本设计思想很简单：高性能离不开异步，异步离不开队列，而内部都是生产者-消费者模式的。
背景介绍：
　现在市面上有很多消息队列系统了。常用的有ActiveMQ, RabbitMQ,ZeroMA,Kafka,RocketMQ。Redis之父最近又开源了一个Disque。我之前在乐视用的是apache的qpid。但是之所以各个系统都在流行，还要看其侧重点。
　其中ActiveMQ可以称之为传统型，它们完全支持JMS和AMQP规范。
　JMS即Java消息服务(Java Message Service)应用程序接口。它是Java平台上有关面向消息中间件（Message Oriented Middleware,缩写为MOM）的技术规范，它便于消息系统中的Java应用程序进行消息交换，并且通过提供标准的产生、发送、接收消息的接口简化企业应用的开发。(*我这里说了，JMS是应用程序接口，就是API，API就意味着是和编程语言绑定的)
　JMS的体系架构由JMS提供者、JMS客户、JMS生产者、JMS消费者、JMS消息、JMS队列、JMS主题组成。
　JMS对象模型包含：连接工厂、JMS连接、JMS会话、JMS目的、JMS生产者和消费者和JMS消息。其中大家最关心的是JMS消息的两种模型：点对点(point to point, queue)和发布/订阅(publish/subscribe, topic)。这两者之间的区别就是点对点模式是生产者发送一条消息到queue，一个queue可以有很多消费者，但是一个消息只能被一个消费者接收，当没有消费者可用时，这个消息会被保存直到有一个可用的消费者，所以queue实现了一个可靠的负载均衡。而发布订阅模式是发布者发送到topic的消息，只有订阅了topic的订阅者才会收到消息。topic实现了发布和订阅，当你发布一个消息，所有订阅这个topic的服务都能得到这个消息，所以从1到N个订阅者都能得到这个消息的拷贝。
　　AMQP(高级消息队列协议)，和JMS的区别在于：JMS只是java平台的方案，AMQP是一个跨语言的协议。由于跨语言的特点，降低了企业和系统集成的开销。所以现在的消息队列系统支持AMQP的多，支持JMS的少。
　AMQP的特征是面向消息，队列化，消息模型（和JMS一样：点对点和发布订阅），可靠性和安全性。它提供了三种消息传递保证方式：最多一次，至少一次和精确一次。　　我们经常在使用消息队列的时候提到的broker是对实现了AMQP协议的服务端的称呼。其基本结构如下图。
Beanstalk 介绍：
　那下面开始说beanstalk了。首先说beanstalk其实并不是JMS规范的，也并不严格遵守AMQP协议。有人说Beanstalk之于RabbitMQ，就好比Nginx之于Apache。它更简单，轻量级，高性能，易使用。但是相比kafka，数据处理能力还是有差距，所以我们现在其实在逐渐替代它。但它有些很易用的特殊功能，后面会讲到。
　Beanstalk 主要包括4个部分。
　1&amp;gt; job:一个需要异步处理的任务，需要放在一个tube中。
　2&amp;gt; tube:一个有名的任务队列，用来存储统一类型的job，是producer和consumer操作的对象。
　3&amp;gt; producer:job的生产者，通过put命令来将一个job放到一个tube中。
　4&amp;gt; consumer:job的消费者，通过reserve、release、bury、delete命令来获取job或改变job的状态。
　刚才说Beanstalk有一些特殊的好用功能。那就是它支持任务优先级(priority)、延时(delay)、超时重发(time-to-run)和预留(buried)，能够很好的支持分布式的后台任务和定时任务处理。这些特性是和beanstalk工作过程密切相关。
　Beanstalk的一个job的生命周期有READY、RESERVED、DELAYED、BURIED四种。
　当producer直接put一个job时，job就是READY状态，等待consumer来处理。如果选择延迟put，job就先到DELAYED状态，到指定时间再READY。consumer获取了READY的job，此状态就为RESERVED。这样其他consumer不能再操作此job。当consumer完成该job后，可以选择delete、release或者bury。
　delete之后，job不能再获取。release的job可以重新迁移或延迟迁移回READY。bury的job可以被休眠，需要的时候再READY或者delete掉。
Beanstalk使用场景：
　用作延时队列：比如可以用于如果用户30分钟内不操作，任务关闭。
　用作循环队列：用release命令可以循环执行任务，比如可以做负载均衡任务分发。
　用作兜底机制：比如一个请求有失败的概率，可以用Beanstalk不断重试，设定超时时间，时间内尝试到成功为止。
　用作定时任务：比如可以用于专门的后台任务。
　用作异步操作：这是所有消息队列都最常用的，先将任务仍进去，顺序执行。</description>
    </item>
    
    <item>
      <title>K8s</title>
      <link>https://travis103.github.io/k8s/</link>
      <pubDate>Fri, 25 Mar 2022 14:45:25 +0800</pubDate>
      
      <guid>https://travis103.github.io/k8s/</guid>
      <description>https://www.jianshu.com/p/c7748893ab00
oci 标准 runtime-spec image-spec 这两个标准通过OCI runtime filesytem bundle的标准格式连接在一起,OCI镜像可以通过工具转换成bundle,然后 OCI 容器引擎能够识别这个bundle来运行容器
容器镜像标准(image-spec) 文件系统: 以layer保存的文件系统,每个layer保存了和上层之间变化的部分,layer应该保存哪些文件,怎么表示增加、修改和删除的文件等 config文件: 保存了文件系统的层级信息(每个层级的hash值,以及历史信息)以及容器运行时需要的一些信息(比如环境变量、工作目录、命令参数、mount 列表) manifest文件: 镜像的config文件索引,有哪些layer,额外的annotation信息,manifest文件中保存了很多和当前平台有关的信息 index文件: 可选的文件,指向不同平台的manifest文件,这个文件能保证一个镜像可以跨平台使用,每个平台拥有不同的manifest文件,使用index作为索引
容器运行时标准(runtime spec)
容器的状态包括如下属性
ociVersion: OCI版本 id: 容器的ID,在宿主机唯一 status: 容器运行时状态,生命周期 creating: 使用 create 命令创建容器,这个过程称为创建中,创建包括文件系统、namespaces、cgroups、用户权限在内的各项内容 created: 容器创建出来,但是还没有运行,表示镜像和配置没有错误,容器能够运行在当前平台 running: 容器的运行状态,里面的进程处于up状态,正在执行用户设定的任务 stopped: 容器运行完成,或者运行出错或者stop命令之后，容器处于暂停状态,这个状态,容器还有很多信息保存在平台中,并没有完全被删除 pid: 容器进程在宿主机的进程ID bundle: 容器文件目录,存放容器rootfs及相应配置的目录 annotations: 与容器相关的注释
containerd containerd是一个简单的守护进程,它可以使用runC管理容器，使用gRPC暴露容器的其他功能. 相比较Docker引擎使用gRPC, containerd暴露出针对容器的增删改查的接口,然而Docker引擎只是使用 full-blown HTTP API接口对Images，Volumes，network，builds等暴露出这些方法
shim containerd-shim进程由containerd进程拉起,即containerd进程是containerd-shim的父进程, 容器进程由containerd-shim进程拉起, 这样的优点比如升级,重启docker或者containerd 不会影响已经running的容器进程, 而假如这个父进程就是containerd,那每次containerd挂掉或升级,整个宿主机上所有的容器都得退出了. 而引入了 containerd-shim 就规避了这个问题(当 containerd 退出或重启时, shim 会 re-parent 到 systemd 这样的 1 号进程上)</description>
    </item>
    
    <item>
      <title>Rsync</title>
      <link>https://travis103.github.io/rsync/</link>
      <pubDate>Fri, 25 Mar 2022 14:43:50 +0800</pubDate>
      
      <guid>https://travis103.github.io/rsync/</guid>
      <description>Docs Install Configure Usage rsync -avz src dest/ --exclude=&amp;#34;&amp;#34; </description>
    </item>
    
    <item>
      <title>Zookeeper</title>
      <link>https://travis103.github.io/zookeeper/</link>
      <pubDate>Fri, 25 Mar 2022 14:41:35 +0800</pubDate>
      
      <guid>https://travis103.github.io/zookeeper/</guid>
      <description>ref1 docker run -d &amp;ndash;name zookeeper01 -p 2181:2181 harbor.local.hqq.com/hqq/zookeeper:latest</description>
    </item>
    
    <item>
      <title>Etcd</title>
      <link>https://travis103.github.io/etcd/</link>
      <pubDate>Fri, 25 Mar 2022 14:41:26 +0800</pubDate>
      
      <guid>https://travis103.github.io/etcd/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jenkins</title>
      <link>https://travis103.github.io/jenkins/</link>
      <pubDate>Fri, 25 Mar 2022 14:35:08 +0800</pubDate>
      
      <guid>https://travis103.github.io/jenkins/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gitlab</title>
      <link>https://travis103.github.io/gitlab/</link>
      <pubDate>Fri, 25 Mar 2022 14:34:56 +0800</pubDate>
      
      <guid>https://travis103.github.io/gitlab/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Telegram Cli</title>
      <link>https://travis103.github.io/telegram-cli/</link>
      <pubDate>Fri, 25 Mar 2022 11:18:47 +0800</pubDate>
      
      <guid>https://travis103.github.io/telegram-cli/</guid>
      <description> on centos  dnf --enablerepo=PowerTools install libevent-devel zlib-devel libconfig-devel readline-devel lua-devel jansson-devel libgcrypt-devel git gcc make openssl-devel git clone --recursive https://github.com/vysheng/tg.git &amp;amp;&amp;amp; cd tg ./configure --disable-openssl --prefix=/usr CFLAGS=&amp;quot;-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -w&amp;quot; make  on ubunut  apt-get update &amp;amp;&amp;amp; apt-get install -y libreadline-dev libconfig-dev libssl-dev lua5.2 liblua5.2-dev libevent-dev libjansson-dev libpython-dev make zlib1g-dev git libgcrypt20-dev git clone --recursive https://github.com/vysheng/tg.git &amp;amp;&amp;amp; cd tg ./configure --disable-openssl --prefix=/usr CFLAGS=&amp;quot;-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -w&amp;quot; make </description>
    </item>
    
    <item>
      <title>Zeronet</title>
      <link>https://travis103.github.io/zeronet/</link>
      <pubDate>Fri, 25 Mar 2022 11:13:46 +0800</pubDate>
      
      <guid>https://travis103.github.io/zeronet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>WSL</title>
      <link>https://travis103.github.io/wsl/</link>
      <pubDate>Fri, 25 Mar 2022 11:12:39 +0800</pubDate>
      
      <guid>https://travis103.github.io/wsl/</guid>
      <description>umount /mnt/c mount -t drvfs C: /mnt/c -o metadata</description>
    </item>
    
    <item>
      <title>Resilio Sync</title>
      <link>https://travis103.github.io/resilio-sync/</link>
      <pubDate>Fri, 25 Mar 2022 11:11:04 +0800</pubDate>
      
      <guid>https://travis103.github.io/resilio-sync/</guid>
      <description>resiliosync  docs www.resilio.com
help.resilio.com
install docker-compose
DATA_FOLDER=/path/to/data/folder/on/the/host WEBUI_PORT=&amp;lt;port&amp;gt; mkdir -p $DATA_FOLDER docker run -d --name Sync \ -p 127.0.0.1:$WEBUI_PORT:8888 \ -p 55555 \ -v $DATA_FOLDER:/mnt/sync \ --restart on-failure \ resilio/sync docker run -d --name Sync \ -p $WEBUI_PORT:8888 \ -p 55555 \ -v $DATA_FOLDER:/mnt/sync \ --restart on-failure \ resilio/sync docker run -d --name Sync \ -p 127.0.0.1:$WEBUI_PORT:8888 \ -p 55555 \ -v $DATA_FOLDER:/mnt/sync \ -v &amp;lt;other_dir&amp;gt;:/mnt/mounted_folders/&amp;lt;dir_name&amp;gt; \ -v &amp;lt;other_dir2&amp;gt;:/mnt/mounted_folders/&amp;lt;dir_name2&amp;gt; \ --restart on-failure \ resilio/sync usage &amp;ndash;config &amp;ndash;storage  &amp;ndash;identity &amp;ndash;license  &amp;ndash;nodaemon &amp;ndash;dump-sample-config &amp;ndash;log  &amp;ndash;webui.</description>
    </item>
    
    <item>
      <title>Trojan</title>
      <link>https://travis103.github.io/trojan/</link>
      <pubDate>Fri, 25 Mar 2022 11:10:27 +0800</pubDate>
      
      <guid>https://travis103.github.io/trojan/</guid>
      <description></description>
    </item>
    
    <item>
      <title>V2ray</title>
      <link>https://travis103.github.io/v2ray/</link>
      <pubDate>Fri, 25 Mar 2022 11:04:21 +0800</pubDate>
      
      <guid>https://travis103.github.io/v2ray/</guid>
      <description>server client  macos brew cask install v2rayx https://github.com/Cenmrev/V2RayX  </description>
    </item>
    
    <item>
      <title>Shadowsocks</title>
      <link>https://travis103.github.io/shadowsocks/</link>
      <pubDate>Fri, 25 Mar 2022 11:02:36 +0800</pubDate>
      
      <guid>https://travis103.github.io/shadowsocks/</guid>
      <description>v2ray on CoreOS  curl https://gist.githubusercontent.com/ushdjkfnf/7eae9cca317fe5887a893f85724fdbc4/raw/07d8c9a728d40256b06d3adc43074ace76b0e9cc/v2ray-install-on-ubuntu.sh | sudo bash  shadowsocks on Centos 7  yum install -y python-pip pip install shadowsocks echo &amp;#39;net.ipv4.tcp_fastopen = 3&amp;#39; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p { &amp;#34;server&amp;#34;:&amp;#34;0.0.0.0&amp;#34;, &amp;#34;server_port&amp;#34;:xxx, &amp;#34;local_port&amp;#34;:xxx, &amp;#34;password&amp;#34;:&amp;#34;xxx&amp;#34;, &amp;#34;timeout&amp;#34;:600, &amp;#34;method&amp;#34;:&amp;#34;aes-256-cfb&amp;#34;, &amp;#34;fast_open&amp;#34;: true } firewall-cmd --zone=public --add-port=13485/tcp --permanent firewall-cmd --reload ssserver -c ss.json -d start chmod +x /etc/rc.d/rc.local cat &amp;gt;&amp;gt; /etc/rc.d/rc.local &amp;lt;&amp;lt; eof if ! ps -ef | grep -v grep | grep ssserver &amp;gt; /dev/null 2&amp;gt;&amp;amp;1;then ssserver -c /root/ss.</description>
    </item>
    
    <item>
      <title>Outline</title>
      <link>https://travis103.github.io/outline/</link>
      <pubDate>Fri, 25 Mar 2022 11:00:57 +0800</pubDate>
      
      <guid>https://travis103.github.io/outline/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Chrome Remote Desktop</title>
      <link>https://travis103.github.io/chrome-remote-desktop/</link>
      <pubDate>Fri, 25 Mar 2022 10:49:33 +0800</pubDate>
      
      <guid>https://travis103.github.io/chrome-remote-desktop/</guid>
      <description>参考1
1 Installing Chrome Remote Desktop wget https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb sudo apt update sudo dpkg --install chrome-remote-desktop_current_amd64.deb sudo apt install --assume-yes --fix-broken 2 Installing an X windows service sudo DEBIAN_FRONTEND=noninteractive \  apt install --assume-yes xfce4 desktop-base sudo echo &amp;#34;exec /usr/bin/xfce4-session&amp;#34; &amp;gt; /etc/chrome-remote-desktop-session sudo apt install --assume-yes xscreensaver sudo systemctl disable lightdm.service 3 Configuring and Starting Chrome Remote Desktop  1. Visit https://remotedesktop.google.com/headless to get and copy the cmds 2. Running cmds on server DISPLAY= /opt/google/chrome-remote-desktop/start-host --code=&amp;quot;4/igEdhwp6CISeetOISO_APaonKJgveECdTIGatI_ss7mCOZbSapCxsd6WKQ9KOn2dhBuTuG3b3cc979Pgx9JyNf4&amp;quot; --redirect-url=&amp;quot;https://remotedesktop.</description>
    </item>
    
    <item>
      <title>Atom</title>
      <link>https://travis103.github.io/atom/</link>
      <pubDate>Fri, 25 Mar 2022 10:45:43 +0800</pubDate>
      
      <guid>https://travis103.github.io/atom/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MicrosoftRemoteDesktop</title>
      <link>https://travis103.github.io/microsoft-remote-desktop/</link>
      <pubDate>Fri, 25 Mar 2022 10:43:16 +0800</pubDate>
      
      <guid>https://travis103.github.io/microsoft-remote-desktop/</guid>
      <description>Microsoft Remote Desktop 是 mac 下非常好用的远程 Windows 桌面的软件，但在 App Store 中国区不提供下载，所以这里介绍一下如何下载官方版本。
 打开页面：https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-mac 找到并点击 “Go to Microsoft Remote Desktop for Mac” 然后跳转到 https://aka.ms/rdmacbeta即可获得下载地址。 最后跳转到的地址是: https://install.appcenter.ms/orgs/rdmacios-k2vy/apps/microsoft-remote-desktop-for-mac/distribution_groups/all-users-of-microsoft-remote-desktop-for-mac  </description>
    </item>
    
    <item>
      <title>Kong</title>
      <link>https://travis103.github.io/kong/</link>
      <pubDate>Thu, 24 Mar 2022 11:09:22 +0800</pubDate>
      
      <guid>https://travis103.github.io/kong/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://travis103.github.io/nginx/</link>
      <pubDate>Thu, 24 Mar 2022 11:09:16 +0800</pubDate>
      
      <guid>https://travis103.github.io/nginx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Zipkin</title>
      <link>https://travis103.github.io/zipkin/</link>
      <pubDate>Thu, 24 Mar 2022 11:06:19 +0800</pubDate>
      
      <guid>https://travis103.github.io/zipkin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jaeger</title>
      <link>https://travis103.github.io/jaeger/</link>
      <pubDate>Thu, 24 Mar 2022 11:06:11 +0800</pubDate>
      
      <guid>https://travis103.github.io/jaeger/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kibana</title>
      <link>https://travis103.github.io/kibana/</link>
      <pubDate>Thu, 24 Mar 2022 11:04:05 +0800</pubDate>
      
      <guid>https://travis103.github.io/kibana/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Filebeat</title>
      <link>https://travis103.github.io/filebeat/</link>
      <pubDate>Thu, 24 Mar 2022 11:03:50 +0800</pubDate>
      
      <guid>https://travis103.github.io/filebeat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Grafana</title>
      <link>https://travis103.github.io/grafana/</link>
      <pubDate>Thu, 24 Mar 2022 11:01:22 +0800</pubDate>
      
      <guid>https://travis103.github.io/grafana/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sqlite</title>
      <link>https://travis103.github.io/sqlite/</link>
      <pubDate>Thu, 24 Mar 2022 10:38:46 +0800</pubDate>
      
      <guid>https://travis103.github.io/sqlite/</guid>
      <description>Install Config Usage </description>
    </item>
    
    <item>
      <title>Memcached</title>
      <link>https://travis103.github.io/memcached/</link>
      <pubDate>Thu, 24 Mar 2022 10:34:53 +0800</pubDate>
      
      <guid>https://travis103.github.io/memcached/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://travis103.github.io/redis/</link>
      <pubDate>Thu, 24 Mar 2022 10:34:47 +0800</pubDate>
      
      <guid>https://travis103.github.io/redis/</guid>
      <description>https://redis.io/commands
 NoSQL(Not Only SQL） NoSQL指的是非关系型数据库，是对不同于传统关系型数据库的数据库管理系统简称，NoSQL是web2.0时代海量数据催生的产物。
特点： 不支持SQL语法 NoSQL的世界中没有通用的语言，每种nosql数据库都有自己的语法，以及擅长的业务场景。 读写性能高 NoSQL数据库都具有非常高的读写性能，尤其在海量数据下，它的表现非常优秀。 灵活的数据模型 NoSQL的存储方式十分灵活，存储方式可以是JSON文档、键值对（key-value）或者其他方式。
redis 基本操作
 什么是Redis Redis是由意大利人Salvatore Sanfilippo（网名：antirez）开发的一款内存高速缓存数据库。Redis全称为：Remote Dictionary Server，该软件使用C语言编写，Redis是一个key-value存储系统，它支持丰富的数据类型，如：string、list、set、zset(sorted set)、hash。 redis是一种nosql数据库,他的数据是保存在内存中，同时redis可以定时把内存数据同步到磁盘，即可以将数据持久化，还提供了多个语言的API，操作比较方便 Redis特点: Redis以内存作为数据存储介质，所以读写数据的效率极高，远远超过数据库。 Redis应用场景: 因为Redis交换数据快，所以在服务器中常用来存储一些需要频繁调取的数据，这样可以大大节省系统直接读取磁盘来获得数据的I/O开销，更重要的是可以极大提升速度。 将这种热点数据存到Redis（内存）中，要用的时候，直接从内存取，极大的提高了速度和节约了服务器的开销。  关系型数据库和非关系数据库的区别 关系型数据库 表和表之间存在的关系 非关系型数据库 不存在表的这种概念,redis是键值对数据库，通过key查找value 所以key是唯一的。
redis五种数据类型、及操作 string 字符串 list 列表 hash 哈希 set 集合 sorted sets 有序集合
key 有5中数据类型：string、list、set、zset(sorted set)、hash。 value :都是字符串类型的(可加引号也可不加)
set key value get key ttl key expire key seconds set key value ex seconds setex key seconds value append key value</description>
    </item>
    
    <item>
      <title>Mongo</title>
      <link>https://travis103.github.io/mongo/</link>
      <pubDate>Thu, 24 Mar 2022 10:34:39 +0800</pubDate>
      
      <guid>https://travis103.github.io/mongo/</guid>
      <description>BSON BSON是一种类json的一种二进制形式的存储格式，简称Binary JSON。MongoDB使用了BSON这种结构来存储数据和网络数据交换。 BSON对应Document这个概念，因为BSON是schema-free的，所以在MongoDB中所对应的Document也有这个特征，这里的一个Document也可以理解成关系数据库中的一条Record，只是Document的变化更丰富一些，Document可以嵌套。 MongoDB以BSON做为其存储结构的一个重要原因是它的可遍历性。 BSON编码扩展了JSON表示，使其包含额外的类型，如int、long、date、浮点数和decimal128。 BSON数据的主要类型有：A，D，E，M和Raw。其中，A是数组，D是切片，M是映射，D和M是Go原生类型。   A类型表示有序的BSON数组。 bson.A{&amp;ldquo;bar&amp;rdquo;, &amp;ldquo;world&amp;rdquo;, 3.14159, bson.D{{&amp;ldquo;qux&amp;rdquo;, 12345}}}
  D类型表示包含有序元素的BSON文档。这种类型应该在顺序重要的情况下使用。如果元素的顺序无关紧要，则应使用M代替。 bson.D{{&amp;ldquo;foo&amp;rdquo;, &amp;ldquo;bar&amp;rdquo;}, {&amp;ldquo;hello&amp;rdquo;, &amp;ldquo;world&amp;rdquo;}, {&amp;ldquo;pi&amp;rdquo;, 3.14159}}
  M类型表示无序的映射。 bson.M{&amp;ldquo;foo&amp;rdquo;: &amp;ldquo;bar&amp;rdquo;, &amp;ldquo;hello&amp;rdquo;: &amp;ldquo;world&amp;rdquo;, &amp;ldquo;pi&amp;rdquo;: 3.14159}
  E类型表示D里面的一个BSON元素。
  Raw类型代表未处理的原始BSON文档和元素，Raw系列类型用于验证和检索字节切片中的元素。当要查找BSON字节而不将其解编为另一种类型时，此类型最有用。
  mongo 10.1.50.84/pacific -u root -p Root_123 --authenticationDatabase admin rs.status() rs.slaveOk() rs=replica set db.getCollection(&amp;#39;demo&amp;#39;).find({&amp;#34;keyIdentifiers&amp;#34;:{&amp;#34;$regex&amp;#34;:&amp;#34;@#@&amp;#34;}}).forEach(function(item){ var keyIdentifiers = item.keyIdentifiers; var arr = keyIdentifiers[0].split(&amp;#34;@#@&amp;#34;); if(arr.length&amp;gt;1){ var item1 = arr[0] var item2 = arr[1] var tem = &amp;#34;&amp;#34; if(item1.</description>
    </item>
    
    <item>
      <title>Postgresql</title>
      <link>https://travis103.github.io/postgresql/</link>
      <pubDate>Thu, 24 Mar 2022 10:34:31 +0800</pubDate>
      
      <guid>https://travis103.github.io/postgresql/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://travis103.github.io/mysql/</link>
      <pubDate>Thu, 24 Mar 2022 10:34:23 +0800</pubDate>
      
      <guid>https://travis103.github.io/mysql/</guid>
      <description>from_unixtime(add_time/1000) as time
连接查询 内连接查询 内连接（join）：从左表取出一条记录，去和右表中所有记录进行匹配，相同的会保留下来。 基本语法：左表 join 右表 on 左表.字段 = 右表.字段
例： select a.id,a.name,a,sex,b.country,b.city,b.street from student a join addr b on a.addrid=b.addrid;
外连接查询 左连接（left join）：以左表为主表 基本语法：from 左表 left join 右表 on 左表.字段 = 右表.字段 例： select a.id,a.name,a.addrid,b.country,b.city from student a left join addr b on a.addrid=b.addrid;
右连接（right join）：以右表为主表 基本语法：from 左表 right join 右表 on 左表.字段 = 右表.字段； 例： select a.id,a.name,a.addrid,b.country,b.city from student a right join addr b on a.</description>
    </item>
    
    <item>
      <title>Ansible</title>
      <link>https://travis103.github.io/ansible/</link>
      <pubDate>Thu, 24 Mar 2022 10:27:13 +0800</pubDate>
      
      <guid>https://travis103.github.io/ansible/</guid>
      <description>Docs  https://docs.ansible.com/ansible/latest/index.html
 Install Configure Cheatsheet Examples Projects </description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://travis103.github.io/python/</link>
      <pubDate>Fri, 18 Mar 2022 15:29:22 +0800</pubDate>
      
      <guid>https://travis103.github.io/python/</guid>
      <description>Tutorial  https://youtu.be/rfscVS0vtbw  Modules img to base64 pdf to img </description>
    </item>
    
    <item>
      <title>Golang</title>
      <link>https://travis103.github.io/golang/</link>
      <pubDate>Fri, 18 Mar 2022 15:29:16 +0800</pubDate>
      
      <guid>https://travis103.github.io/golang/</guid>
      <description>Tutorial - https://go.dev/doc/tutorial/ - https://youtu.be/YS4e4q9oBaU Install wget https://dl.google.com/go/go1.15.2.linux-amd64.tar.gz tar xf go1.12.2.linux-amd64.tar.gz mv go /usr/local Config go env -w GOPROXY=https://goproxy.io,https://goproxy.cn,direct Build CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build Comments  // /* */  Basic Types  strings numbers booleans arrays slices maps  m := make(map[string]int) m[&amp;#34;k1&amp;#34;] = 7 m[&amp;#34;k2&amp;#34;] = 13 fmt.Println(m) // =&amp;gt; map[k1:7 k2:13]  v1 := m[&amp;#34;k1&amp;#34;] fmt.Println(v1) // =&amp;gt; 7 fmt.</description>
    </item>
    
    <item>
      <title>Rust</title>
      <link>https://travis103.github.io/rust/</link>
      <pubDate>Fri, 18 Mar 2022 14:45:13 +0800</pubDate>
      
      <guid>https://travis103.github.io/rust/</guid>
      <description>Tutorial  https://doc.rust-lang.org/book/ https://youtu.be/MsocPEZBd-M  Install curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh Uninstall rustup self uninstall Cargo cargo new --bin rust_quickstart Cheatsheet </description>
    </item>
    
    <item>
      <title>Chrome</title>
      <link>https://travis103.github.io/chrome/</link>
      <pubDate>Fri, 18 Mar 2022 14:08:25 +0800</pubDate>
      
      <guid>https://travis103.github.io/chrome/</guid>
      <description>omni
  Tampermonkey
  google chrome
  cmd + t
  cmd + shift + t(Open Last Closed Tab)
  cmd + n
  cmd + w (Close the Active Right Away)
  cmd + number (jump through tabs by tab index)
  cmd + shift + n (Go Incognito Mode)
  cmd + -&amp;gt;
  cmd + &amp;lt;-</description>
    </item>
    
    <item>
      <title>Sublime</title>
      <link>https://travis103.github.io/sublime/</link>
      <pubDate>Fri, 18 Mar 2022 14:08:21 +0800</pubDate>
      
      <guid>https://travis103.github.io/sublime/</guid>
      <description>1 Install 2 Config { &amp;quot;font_size&amp;quot;: 12, &amp;quot;save_on_focus_lost&amp;quot;: true, &amp;quot;ignored_packages&amp;quot;: [ &amp;quot;Markdown&amp;quot;, &amp;quot;Vintage&amp;quot;, ], &amp;quot;trim_trailing_white_space_on_save&amp;quot;: true, &amp;quot;word_wrap&amp;quot;: true, } 3 Plugins  package control filemanager markdown extended markdownPreview toml  </description>
    </item>
    
    <item>
      <title>Mac</title>
      <link>https://travis103.github.io/mac/</link>
      <pubDate>Fri, 18 Mar 2022 14:07:39 +0800</pubDate>
      
      <guid>https://travis103.github.io/mac/</guid>
      <description>sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; sh -c &amp;#34;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&amp;#34; sysctl -a | grep -E --color &amp;#39;machdep.cpu.features|VMX&amp;#39; sysctl -n hw.ncpu /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; /bin/zsh -c &amp;#34;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&amp;#34; /bin/zsh -c &amp;#34;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/HomebrewUninstall.sh)&amp;#34; 140.82.113.4 github.com git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask fetch --unshallow smartmontools  https://www.bilibili.com/read/cv14867869/
 brew install smartmontools smartctl -s on disk0 smartctl -a disk0 常用命令 sudo launchctl list locate  Homebrew  ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34;   atom</description>
    </item>
    
    <item>
      <title>geth</title>
      <link>https://travis103.github.io/geth/</link>
      <pubDate>Fri, 18 Mar 2022 09:52:05 +0800</pubDate>
      
      <guid>https://travis103.github.io/geth/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>gh</title>
      <link>https://travis103.github.io/gh/</link>
      <pubDate>Fri, 18 Mar 2022 09:46:52 +0800</pubDate>
      
      <guid>https://travis103.github.io/gh/</guid>
      <description>Docs  https://cli.github.com/manual/
 Install Configure gh config set editor vim gh config set editor &amp;#34;code --wait&amp;#34; gh config set git_protocol ssh --host github.com gh config set prompt disabled Usage brew install gh gh auth status gh auth login --with-token &amp;lt; token.txt gh auth login -h github.com gh auth logout -h github.com gh repo list </description>
    </item>
    
    <item>
      <title>stat</title>
      <link>https://travis103.github.io/stat/</link>
      <pubDate>Fri, 18 Mar 2022 09:46:09 +0800</pubDate>
      
      <guid>https://travis103.github.io/stat/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>date</title>
      <link>https://travis103.github.io/date/</link>
      <pubDate>Fri, 18 Mar 2022 09:46:05 +0800</pubDate>
      
      <guid>https://travis103.github.io/date/</guid>
      <description>Docs Install Configure Usage date +%s date -d @1562641547 </description>
    </item>
    
    <item>
      <title>jq</title>
      <link>https://travis103.github.io/jq/</link>
      <pubDate>Fri, 18 Mar 2022 09:45:59 +0800</pubDate>
      
      <guid>https://travis103.github.io/jq/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>systemd</title>
      <link>https://travis103.github.io/systemd/</link>
      <pubDate>Thu, 17 Mar 2022 15:20:59 +0800</pubDate>
      
      <guid>https://travis103.github.io/systemd/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>supervisor</title>
      <link>https://travis103.github.io/supervisor/</link>
      <pubDate>Thu, 17 Mar 2022 15:20:51 +0800</pubDate>
      
      <guid>https://travis103.github.io/supervisor/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>pm2</title>
      <link>https://travis103.github.io/pm2/</link>
      <pubDate>Thu, 17 Mar 2022 15:20:45 +0800</pubDate>
      
      <guid>https://travis103.github.io/pm2/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>mtr</title>
      <link>https://travis103.github.io/mtr/</link>
      <pubDate>Wed, 16 Mar 2022 20:04:14 +0800</pubDate>
      
      <guid>https://travis103.github.io/mtr/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    <item>
      <title>tmux</title>
      <link>https://travis103.github.io/tmux/</link>
      <pubDate>Wed, 16 Mar 2022 20:04:14 +0800</pubDate>
      
      <guid>https://travis103.github.io/tmux/</guid>
      <description>Docs Install Configure Usage </description>
    </item>
    
    
    
  </channel>
</rss>
