"""
Django settings for DevOps project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!w!wix1)@@m4bu&x2#!#glfpfa8_=k!hj^-11nrr&ji+swvud@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
import conf

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'autodeploy',
    'awsresource',
    'MemcacheOps',
    'EC2Control',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

MIDDLEWARE_CLASSES = (
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'DevOps.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DevOps.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
                'format': '%(asctime)s %(message)s'
                },
    },
    'filters': {
    },
    'handlers': {
        'deploy_handler': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'%s/deploy.log' % conf.LOGDIR,
            'formatter':'standard',
        },
        'lastdeploy_handler': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'%s/lastestdeploy.log' % conf.LOGDIR,
            'formatter':'standard',
        },
        'info_handler': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'%s/django.log' % conf.LOGDIR,
            'formatter':'standard',
        },
        'error_handler': {
            'level':'ERROR',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'%s/errordjango.log' % conf.LOGDIR,
            'formatter':'standard',
        },
        'source_handler': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'%s/sourceMng.log' % conf.LOGDIR,
            'formatter':'standard',
        },
        'memcache_handler': {
            'level':'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':'%s/memcacheMng.log' % conf.LOGDIR,
            'formatter':'standard',
        },
    },
    'loggers': {
        'deployinfo':{
            'handlers': ['deploy_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'lastdeploy':{
            'handlers': ['lastdeploy_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'info':{
            'handlers': ['info_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'errorinfo':{
            'handlers': ['error_handler'],
            'level': 'ERROR',
            'propagate': False
        },
        'sourceinfo':{
            'handlers': ['source_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'memcacheinfo':{
            'handlers': ['memcache_handler'],
            'level': 'INFO',
            'propagate': False
        },
    }
}

############
# SESSIONS #
############                   # Whether to save the session data on every request.
SESSION_EXPIRE_AT_BROWSER_CLOSE = True                  # Whether a user's session cookie expires when the Web browser is closed.
